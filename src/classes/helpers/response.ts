import { ClassType, Field, ObjectType } from "type-graphql"
import { UserEntity } from "../../entity/UserEntity"
import { User } from "../User"

export default function GenericReponse<TItem>(TItemClalss: ClassType<TItem>)
{
    @ObjectType({isAbstract: true})
    abstract class AbstractReponse {
        @Field({description: "Code is the code number generated by the operation"})
        code: number
        @Field({description: "Success is a boolean field used to express if the operation was succefull or not"})
        success: boolean
        @Field({description: "The message genereted by the operation"})
        message: string
        @Field(type => TItemClalss, {description: "The object generated by the operation"})
        genericObject: TItem
    }

    return AbstractReponse;
}